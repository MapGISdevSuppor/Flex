<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   xmlns:map="zdims.map.*"  
			   xmlns:components="components.*" xmlns:control="zdims.control.*" xmlns:zdims="zdims.*" xmlns:myControls="myControls.*" initialize="tile_creationCompleteHandler()"  >
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import Mapgis7.WebService.BasLib.CDisplayStyle;
			import Mapgis7.WebService.BasLib.CDynNoteInfo;
			import Mapgis7.WebService.BasLib.CSetLayerDisplayStyle;
			import Mapgis7.WebService.BasLib.DynShowStyle;
			import mx.events.SliderEvent;
			import mx.events.FlexEvent;
			import config.ServerIP;
			import utilEvent.ReadURLEvent;
			private var dynNoteInfo:CDynNoteInfo;
			private var dynStyle:DynShowStyle;
			private var displayStyle:CDisplayStyle;
			private var setDisplayStyle:CSetLayerDisplayStyle;
			private var VecAddress:String="";
			private var TileAddress:String="";
			private var viewConfig:ServerIP;
			private function tile_creationCompleteHandler():void{
						viewConfig=new ServerIP();
						viewConfig.mapConfig1(this);
					this.addEventListener(ReadURLEvent.READ_COMPLETE, TilereadURLCompelte);
				
			}
			//获取服务地址
			private function TilereadURLCompelte(event:ReadURLEvent):void
			{
				TileAddress=viewConfig.TileURL;
				VecAddress=viewConfig.vectorURL;
				this.baseworld.serverAddress=TileAddress;
				this.river.serverAddress=VecAddress;
				this.mapcontainer.refresh();
			}
			protected function tilelayer_changeHandler(event:Event):void
			{// 世界地图显示控制			
			    if(this.tilelayer.selected)
					//设置显示世界地图
					this.baseworld.display = true;
				else
				{
					//设置隐藏世界地图
				   this.baseworld.display = false;
				   //设置图层不透明
				   this.baseworld.alpha = this.tileAlpha.value = 1;
				}		
			}
			protected function vectlayer_changeHandler(event:Event):void
			{
				// 河流图层显示控制	
				if(this.vectlayer.selected)
				{
					//设置显示河流图层
					this.river.display = true;
					//显示河流图层时解开控制面板的河流名称显示控制按钮
					this.layername.enabled = true;
				}			    
				else
				{
					//设置隐藏河流图层
					this.river.display = false;
					//设置图层不透明
					this.river.alpha = this.vectAlpha.value = 1;
					//隐藏河流图层时锁定控制面板的河流名称显示控制按钮
					this.layername.enabled = false;
				}	
			}


			protected function tileAlpha_changeHandler(event:SliderEvent):void
			{
				//设置世界地图图层的透明度	
				this.baseworld.alpha = this.tileAlpha.value;
			}
			protected function vectAlpha_changeHandler(event:SliderEvent):void
			{
				//设置矢量河流图层的透明度
				this.river.alpha = this.vectAlpha.value;			
			}
			protected function layername_changeHandler(event:Event):void
			{
				if(this.vectlayer.selected)
				{
 				    if(this.layername.selected)
				    {
						//设置显示河流名称的动态注记					
					    this.dynStyle.DynNoteFlag = true;
				    }
				    else
				    {
						//设置不显示河流名称的动态注记
				        this.dynStyle.DynNoteFlag = false;
				    }		
					//更新图层的地图显示样式
				    this.displayStyle.ShowStyle[0] = this.dynStyle;
					//更新地图显示参数
				    this.setDisplayStyle.DisplayStyle[0] = this.displayStyle;
					//设置河流图层显示样式 
				    this.river.setLayerDisplayStyle(this.setDisplayStyle,setDisplayStyle_callback);
					
				}
			}
			
			protected function setDisplayStyle_callback(e:Event):void
			{
				//刷新河流图层
			    this.river.refresh();
			}
			protected function river_creationCompleteHandler():void
			{
				//初始化动态注记类对象
				dynNoteInfo = new CDynNoteInfo();
				//设置显示动态注记的字段名 
				dynNoteInfo.FieldName = "NAME"; 
				//设置显示动态注记的字体大小 
				dynNoteInfo.FontSize = 12;
				//初始化地图显示参数对象
				dynStyle = new DynShowStyle();
				//设置显示动态注记
				dynStyle.DynNoteFlag = true;
				//设置动态注记参数
				dynStyle.DynNoteInfo = dynNoteInfo;
				//初始化地图显示样式类对象
				displayStyle = new CDisplayStyle();
				displayStyle.ShowStyle = new Array();
				//设置第一个图层的地图显示样式
				displayStyle.ShowStyle[0] = dynStyle;
				//初始化设置图像显示参数 
				setDisplayStyle = new CSetLayerDisplayStyle();
				setDisplayStyle.DisplayStyle = new Array();
				//设置需要的显示参数
				setDisplayStyle.DisplayStyle[0] = displayStyle;
			}
		
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<!--加载地图容器-->
	<map:IMSMap x="0" y="0" width="100%" height="100%" id="mapcontainer"
				levelNum="8" initShowLevel="3" enableProgressBar="false" xMinMap="-181.18399779022"  xMaxMap="188.619962766591" 
				yMinMap="-90.7340663245236" yMaxMap="279.069894232288"
				restoreCenterX="3.72" restoreCenterY="-10.17"
				enableZoomOutMinLevel="false">
		<!--加载河流（矢量图层）-->
		<map:VectorLayerSource  x="0" y="0" id="h1" layerName="RIVER.WL" layerType="简单要素类" />
		<map:VectorLayerDataCfg  x="0" y="0" id="gdb" GDBServerName="MapGisLocal" GDBName="world"  layerInfos="{[h1]}" />
		<map:VectorLayer x="0" y="0" id="river" layerInfoArr="{[gdb]}"  display="false"	
						 autoGetMapInfo="true" 
						 creationComplete="river_creationCompleteHandler()"  />
		
		<!--基于K9系列平台显示瓦片地图-->
		<!--<map:TileLayer x="0" y="0" id="baseworld" hdfName="world.hdf" 
					   autoGetMapBound="true" >
		</map:TileLayer>-->
		<!--显示瓦片地图（世界地图）-->
		<map:TileLayer x="0" y="0" id="baseworld" hdfName="world" 
					  autoGetMapBound="true" >
		</map:TileLayer>
	</map:IMSMap>

	<!--图层控制窗口-->
	<control:IMSWindow right="5" top="10" width="320" height="250" backgroundAlpha="0.8"  title="地图设置窗口"> 

	<s:VGroup  x="15" y="15"  fontSize="12" fontStyle="normal">
			<mx:Label x="15" y="20" text="叠加图层："  />
			<!--世界地图显示控制的按钮-->
			<mx:CheckBox x="15" y="30"  id="tilelayer" label="世界地图（瓦片图层）" selected="true" change="tilelayer_changeHandler(event)" />
			<s:HGroup>
				<!--河流图层与其名称注记显示控制的按钮-->
				<mx:CheckBox x="15" y="40"  id="vectlayer" label="主要河流（矢量图层）" change="vectlayer_changeHandler(event)"/>
				<mx:CheckBox x="100" y="40" id="layername"  label="是否显示河流名称" enabled="false"  change="layername_changeHandler(event)"/>	
			</s:HGroup>
			<mx:HRule  x="20" y="60" width="260" height="2" strokeColor="#000000" shadowColor="#ffffff" alpha="0.4"/>
			<mx:Label  x="15" y="80" text="图层透明度：" />
			<!--世界地图透明度控制控件-->
			<s:HGroup>
				<mx:Label  x="15" y="80" text="世界地图透明度：" />
				<mx:HSlider x="15" y="90" width="150" id="tileAlpha" minimum="0" maximum="1" 
							tickInterval="1" allowTrackClick="true" liveDragging="true"  value="1"
							change="tileAlpha_changeHandler(event)"	/>
			</s:HGroup>
			<!--河流图层透明度控制控件-->
			<s:HGroup>
				<mx:Label  x="15" y="80" text="河流图层透明度：" />
				<mx:HSlider x="15" y="90" width="150" id="vectAlpha" minimum="0" maximum="1" 
							tickInterval="1" allowTrackClick="true" liveDragging="true"  value="1"
							change="vectAlpha_changeHandler(event)"/>
			</s:HGroup>
		</s:VGroup>						
</control:IMSWindow>
</s:Application>
