<?xml version="1.0" encoding="utf-8"?>
<components:BasicTileWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
							xmlns:s="library://ns.adobe.com/flex/spark" 
							xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="components.*" 
							width="332" height="194" x="950" y="350" title="聚合标注">
	<components:layout>
		<s:BasicLayout/>
	</components:layout>
	<fx:Script>
		<![CDATA[
			
			
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import utilEvent.ReadURLEvent;
			
			import zdims.drawing.CoordinateType;
			import zdims.event.IMSMapEvent;
			import zdims.map.IMSMap;
			
			import zdimsExtends.Interface.myMarkLayer;
			import zdimsExtends.mymark.*;
			include "myDataInfo.as";	
			private var maTemp:IMSMark;
			private var markinfo:MarkInfo;
			private var flag:Boolean=true;
			public var mapContainer:IMSMap;
			public var markLayer:myMarkLayer=null;
			public var toolId:String="";
			public var basicFlexApp:FlexModuleDemo=null;
			public var polyModule:PolymericModule=null;
			//添加标注
			protected function addmark_clickHandler(event:MouseEvent):void
			{
				if(markLayer!=null)
				{
					//清空标注图层
					markLayer.canclePolymeric();
					markLayer.removeAllMark();	
				}
				if(markLayer==null){
					markLayer=new myMarkLayer();
					mapContainer.addElement(markLayer);
				}
				var i:int=0;
				for(i=0;i<positionInfo[0].length;i++)
				{
					addmyMark(cityName[0][i],positionInfo[0][i].x,positionInfo[0][i].y);
				}
			}
			//添加标注执行函数
			private function addmyMark(markname:String,x:Number,y:Number):void
			{
				var img:Image=new Image();
				img.source="$$tools$$/"+toolId+"/PolymericImg/p1.png";
				var ma:IMSMark=new IMSMark(img,CoordinateType.Logic);
				ma.x=x;
				ma.y=y;
				ma.markname=markname;
				
				ma.markControl.addEventListener(MouseEvent.CLICK,function(e:MouseEvent):void
				{
					showInfo(ma.x,ma.y,ma.markname);
				});
				this.addEventListener(MouseEvent.MOUSE_MOVE,onOut);
				markLayer.addMark(ma);
			}
			
			private function onOut(e:MouseEvent):void
			{
				if(markinfo!=null)
					markinfo.close();
			}
			//鼠标点击标注响应事件：弹框显示标注的详细信息
			private function showInfo(x:Number,y:Number,markname:String):void
			{
				if(markinfo==null)
				{
					//当前没有添加过详细信息显示窗口，则创建
					markinfo=new MarkInfo();
					markinfo.addEventListener(FlexEvent.CREATION_COMPLETE,function(e:FlexEvent):void{
						if(markLayer.enablePolymericMark==true)
						{
							markinfo.logicX=mapContainer.mouseDownLogicPnt.x;
							markinfo.logicY=mapContainer.mouseDownLogicPnt.y;
						}
						else
						{
							markinfo.logicX=x;
							markinfo.logicY=y;
						}
						//更新详细信息显示位置
						markinfo.updatePosition();
						markinfo.Xinfo.text=x.toString();
						markinfo.Yinfo.text=y.toString();
						markinfo.placeName.text=markname;
						markinfo.visible=true;	
					});
					markinfo.mapcontainer=mapContainer;
					this.mapContainer.addChild(markinfo);
					PopUpManager.addPopUp(markinfo,this.mapContainer,false);
				}
				else
				{
					//已创建详细信息显示窗口，直接修改信息
					if(markLayer.enablePolymericMark==true)
					{
						markinfo.logicX=mapContainer.mouseMoveLogicPnt.x;
						markinfo.logicY=mapContainer.mouseMoveLogicPnt.y;
					}
					else
					{
						markinfo.logicX=x;
						markinfo.logicY=y;
					}
					//更新详细信息显示位置
					markinfo.updatePosition();
					markinfo.Xinfo.text=x.toString();
					markinfo.Yinfo.text=String(y);
					markinfo.placeName.text=String(markname);
					markinfo.visible=true;
				}
			}
			//中心聚合标注
			
			protected function middlemeric_clickHandler(event:MouseEvent):void
			{
				//this.markLayer.polymericCenterColor=0x3366CC;
				markLayer.enablePolymericMark=true;
			}
			
			//解除聚合处理
			protected function delmeric_clickHandler(event:MouseEvent):void
			{
				markLayer.enablePolymericMark=false;
			}
			//删除标注
			protected function delmark_clickHandler(event:MouseEvent):void
			{
				if(markLayer!=null)
				{
					//清空标注图层
					markLayer.canclePolymeric();
					markLayer.removeAllMark();	
				}
			}
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				mapContainer.addEventListener(IMSMapEvent.MAP_OPERTYPECHANGE,onChange);
			}
			
			internal function onChange(e:IMSMapEvent):void
			{
				if(markLayer!=null&&markLayer.enablePolymericMark)
				{
					markLayer.initPolymericMark();
				}
			}
			
			public override function close():void{
				if(markLayer!=null)
				{
					//清空标注图层
					markLayer.canclePolymeric();
					markLayer.removeAllMark();	
				}
				if(polyModule.PolTileWindow){
					this.basicFlexApp.main.removeElement(polyModule.PolTileWindow);
					polyModule.PolTileWindow=null;
				}
			}
			public override function onMouseUp(e:MouseEvent):void{
				this.basicFlexApp.main.removeElement(this);
				this.basicFlexApp.main.addElement(this);
			}
			//鼠标移入到绘制的图标上改变颜色的效果
			private function rollOverHandlerPolymeric(event:Event):void{
				event.currentTarget.filters=[glowerPolymeric];
			}
			//鼠标移出到绘制的图标上恢复原始效果
			private function rollOutHandlerPolymeric(event:Event):void{
				event.currentTarget.filters=[];
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<s:GlowFilter id="glowerPolymeric" alpha="1.0" blurX="6.0" blurY="6.0" color="#D70301" inner="false"
					  knockout="false" quality="2" strength="1"/>
	</fx:Declarations>

	<mx:Canvas width="330" height="161" backgroundColor="gray" backgroundAlpha="0.2"  x="0" y="0">

			<mx:Image width="140" height="70" click="addmark_clickHandler(event)"  toolTip="添加标注" 
					   rollOver="rollOverHandlerPolymeric(event)" rollOut="rollOutHandlerPolymeric(event)"
					  buttonMode="true" source="@Embed('PolymericImg/btn1.png')" x="10" y="10">
				
			</mx:Image>
			<mx:Image width="140" height="70"  click="middlemeric_clickHandler(event)" toolTip="中心聚合标注"
					  rollOver="rollOverHandlerPolymeric(event)" rollOut="rollOutHandlerPolymeric(event)"
					  buttonMode="true" source="@Embed('PolymericImg/btn2.png')" x="172" y="10">
		
			</mx:Image>
			<mx:Image width="140" height="70"   click="delmeric_clickHandler(event)" toolTip="解除聚合"
					  rollOver="rollOverHandlerPolymeric(event)" rollOut="rollOutHandlerPolymeric(event)"
					  buttonMode="true" source="@Embed('PolymericImg/btn3.png')" x="10" y="79">
				
			</mx:Image>
			<mx:Image width="140" height="70"    click="delmark_clickHandler(event)" toolTip="删除标注"
					  rollOver="rollOverHandlerPolymeric(event)" rollOut="rollOutHandlerPolymeric(event)"
					  buttonMode="true" source="@Embed('PolymericImg/btn4.png')" x="172" y="79">
				
			</mx:Image>
		
	</mx:Canvas>

<!--	<mx:Button id="addmark"     x="40" y="10" label="添加标注"    
			   click="addmark_clickHandler(event)"/>
	<mx:Button id="middlemeric" x="118" y="10" label="中心聚合标注" 
			   click="middlemeric_clickHandler(event)"/>
	<mx:Button id="delmeric" x="40" y="63" label="解除聚合"
			   click="delmeric_clickHandler(event)" width="74"/>
	<mx:Button id="delmark" x="118" y="63" label="删除标注"
			   click="delmark_clickHandler(event)"/>-->
</components:BasicTileWindow>
